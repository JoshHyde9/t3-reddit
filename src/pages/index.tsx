import { type NextPage } from "next";
import Head from "next/head";
import React from "react";
import { PostCard } from "../components/PostCard";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const utils = api.useContext();
  const { data, isLoading, fetchNextPage } = api.post.getAll.useInfiniteQuery(
    { limit: 10 },
    {
      getNextPageParam: (lastPage) => lastPage.nextCursor,
      refetchOnWindowFocus: false,
    }
  );

  const { mutate } = api.post.vote.useMutation({
    onSettled: async () => {
      await utils.post.getAll.invalidate();
    },
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto min-h-screen max-w-prose pb-10">
        <div>
          <button
            onClick={() =>
              mutate({ value: -1, postId: "cng3xlyhe9042fqzkbw67iknv" })
            }
          >
            Vote post
          </button>
        </div>
        <div>
          {isLoading && !data ? <p>Loading...</p> : null}
          {data?.pages.map((pages, i) => (
            <React.Fragment key={i}>
              {pages.items.map((post) => (
                <PostCard key={post.id} post={post} />
              ))}
            </React.Fragment>
          ))}
        </div>
        {!isLoading &&
        data?.pages[0] &&
        data.pages[0].items &&
        data.pages[0].items.length > 0 ? (
          <div className="flex justify-center">
            <button
              onClick={() => fetchNextPage()}
              className="rounded-md bg-teal-600 py-2 px-4 text-white duration-300 hover:bg-teal-500"
            >
              Load more
            </button>
          </div>
        ) : null}
      </main>
    </>
  );
};

export default Home;
