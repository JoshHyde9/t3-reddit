import { type NextPage } from "next";
import Head from "next/head";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const utils = api.useContext();

  const { mutate: createPost } = api.post.createPost.useMutation({
    onSuccess: async () => {
      await utils.post.invalidate();
    },
  });

  const { mutate: updatePost } = api.post.updatePost.useMutation({
    onSuccess: async () => {
      await utils.post.invalidate();
    },
  });

  const { mutate: deletePost, error } = api.post.deletePost.useMutation({
    onSuccess: async () => {
      await utils.post.invalidate();
    },
  });

  const posts = api.post.getAll.useQuery(undefined, {
    refetchOnWindowFocus: false,
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div>
          <button
            className="text-white"
            onClick={() => createPost({ title: "Hello from client" })}
          >
            Create post
          </button>
        </div>
        <div>
          {posts.data?.map((post) => {
            return (
              <div className="text-white" key={post.id}>
                <p>{post.id}</p>
                <h1>{post.title}</h1>
                <p>{post.createdAt.toString()}</p>
                <p>{post.updatedAt.toString()}</p>
              </div>
            );
          })}
        </div>
        {posts.data && (
          <>
            <button
              className="text-white"
              onClick={() => {
                if (!posts.data[0]) return;

                updatePost({ id: posts.data[0].id, title: "Post was updated" });
              }}
            >
              Update Post
            </button>
            <button
              className="text-white"
              onClick={() => {
                if (!posts.data[0]) return;

                deletePost({ id: posts.data[0].id });
              }}
            >
              Delete Post
            </button>

            {error && <p className="text-white">{error.message}</p>}
          </>
        )}
      </main>
    </>
  );
};

export default Home;
